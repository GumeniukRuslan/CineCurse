{"version":3,"file":"static/js/289.d945636b.chunk.js","mappings":"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","sources":["components/CastMember/castMember.styled.js","components/CastMember/CastMember.jsx","components/Cast/cast.styled.js","components/Cast/Cast.jsx","components/Error/error.styled.js","components/Error/Error.jsx","components/Message/message.styled.js","components/Message/Message.jsx","constants/constants.js","helpers/api.js"],"sourcesContent":["import { DEFAULT_VALUES } from 'constants/constants';\nimport styled from 'styled-components';\n\nexport const CastMemberStyled = styled.li`\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  gap: 10px;\n  border-radius: 4px;\n  background-color: rgba(220, 214, 247, 0.3);\n  backdrop-filter: blur(10px);\n  box-shadow: 5px 5px 5px 0px rgba(0, 0, 0, 0.5);\n  width: 70%;\n\n  @media screen and (min-width: 380px) {\n    width: calc((100% - 2 * 20px) / 2);\n  }\n\n  @media screen and (min-width: 600px) {\n    width: calc((100% - 3 * 20px) / 3);\n  }\n  @media screen and (min-width: 910px) {\n    width: calc((100% - 5 * 20px) / 5);\n  }\n  @media screen and (min-width: 1150px) {\n    width: calc((100% - 7 * 20px) / 7);\n  }\n`;\n\nexport const ActorPhoto = styled.img`\n  width: 100%;\n  display: block;\n  margin-top: ${avatarHeigth};\n`;\n\nexport const ActorName = styled.h2`\n  font-size: 16px;\n  text-align: center;\n  color: white;\n  text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000,\n    1px 1px 0 #000;\n`;\n\nexport const ActorPosition = styled.p`\n  font-size: 14px;\n  text-align: center;\n  padding: 10px;\n  color: white;\n  text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000,\n    1px 1px 0 #000;\n`;\n\nfunction avatarHeigth(props) {\n  if (props.src === DEFAULT_VALUES.AVATAR) {\n    return 'auto';\n  } else {\n    return '0';\n  }\n}\n","import { DEFAULT_VALUES } from \"constants/constants\";\nimport { ActorName, ActorPhoto, ActorPosition, CastMemberStyled } from \"./castMember.styled\"\nimport PropTypes from 'prop-types';\n\nexport const CastMember = ({member}) => {\n  return (\n    <CastMemberStyled>\n      <ActorPhoto  src={member.profile_path ? `${DEFAULT_VALUES.IMG_PATH}${member.profile_path}` : DEFAULT_VALUES.AVATAR} alt={member.name} />\n      <ActorName>{member.name}</ActorName>\n      <ActorPosition>{member.character}</ActorPosition>\n    </CastMemberStyled>\n    \n  )\n}\n\nCastMember.propTypes = {\n  member: PropTypes.object.isRequired\n} ","import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  position: relative;\n  gap: 20px;\n  box-sizing: border-box;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin-bottom: 30px;\n  padding: 15px;\n  width: 100%;\n  border-radius: 10px;\n  background-color: rgba(220, 214, 247, 0.3);\n  backdrop-filter: blur(10px);\n  box-shadow: 0 0 5px rgba(0, 0, 0, 0.5), 0 0 10px rgba(0, 0, 0, 0.3),\n    0 0 20px rgba(0, 0, 0, 0.1);\n`;\n","import { CastMember } from \"components/CastMember/CastMember\"\nimport { getCast } from \"helpers/api\";\nimport { useEffect, useState } from \"react\"\nimport { useParams } from \"react-router-dom\";\nimport { STATUS } from \"constants/constants\";\nimport { Error } from \"components/Error/Error\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { Message } from \"components/Message/Message\";\nimport { CastList } from \"./cast.styled\";\n\n\nconst Cast = () => {\n  const [status, setStatus] = useState(STATUS.IDLE);\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n\n  useEffect(() => {\n    setStatus(STATUS.PENDING)\n    try {\n      (async () => {  \n        const data = await getCast(movieId)\n        setCast(data.cast)\n        setStatus(STATUS.RESOLVED)\n      })();\n    } catch {\n      setStatus(STATUS.REJECTED)\n    }\n  }, [movieId])\n\n  return (\n    <>\n      {status === STATUS.PENDING && <Loader />}\n      {status === STATUS.RESOLVED\n        ? (cast.length ? <CastList>{cast && cast.map(member => <CastMember key={member.id} member={member} />)}</CastList> : <Message text=\"Ninja clan\" />)\n        : <></>}\n      {status === STATUS.REJECTED && <Error/>}\n    </>\n  )\n}\n\nexport default Cast","import styled from 'styled-components';\n\nexport const StyledError = styled.p`\n  color: white;\n  font-size: 25px;\n  text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000,\n    1px 1px 0 #000;\n  padding: 25px;\n  margin: auto;\n  display: block;\n  text-align: center;\n  border-radius: 10px;\n  background-color: rgba(220, 214, 247, 0.3);\n  backdrop-filter: blur(10px);\n`;\n","import { StyledError } from \"./error.styled\"\n\nexport const Error = () => {\n  return (\n    <StyledError>Error</StyledError>\n  )\n}","import styled from 'styled-components';\n\nexport const StyledMessage = styled.p`\n  color: white;\n  font-size: 25px;\n  text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000,\n    1px 1px 0 #000;\n  padding: 25px;\n  margin: auto;\n  display: block;\n  text-align: center;\n  border-radius: 10px;\n  background-color: rgba(220, 214, 247, 0.3);\n  backdrop-filter: blur(10px);\n`;\n","import PropTypes from 'prop-types';\nimport { StyledMessage } from \"./message.styled\"\n\nexport const Message = ({ text }) => {\n  return (\n    <StyledMessage>{text}</StyledMessage>\n  )\n}\n\nMessage.propTypes = {\n  text: PropTypes.string\n} ","export const STATUS = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nexport const DEFAULT_VALUES = {\n  POSTER:\n    'https://upload.wikimedia.org/wikipedia/commons/thumb/6/65/No-Image-Placeholder.svg/1665px-No-Image-Placeholder.svg.png',\n  AVATAR:\n    'https://upload.wikimedia.org/wikipedia/commons/9/99/Sample_User_Icon.png',\n  IMG_PATH: 'https://image.tmdb.org/t/p/original',\n  DESCRIPTION:\n    'Unfortunately, this film has become a forgotten and abandoned piece of human culture and history, remaining without a description. But as a brave viewer, if you believe this is an incredible injustice, I implore you to visit themoviedb.org and help fill in the missing link of our heritage.',\n};\n","import axios from 'axios';\n\nconst KEY = '2de054a07ae490574e29d3b99d4d100e';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst TRENDING = '/trending/movie/day';\nconst SEARCH = '/search/movie';\n\nexport async function getTrends(page = 1) {\n  const searchParams = new URLSearchParams({\n    api_key: KEY,\n    page: page,\n  });\n  const response = await axios.get(`${BASE_URL}${TRENDING}?${searchParams}`);\n  return response.data;\n}\n\nexport async function getMovies(query, page = 1) {\n  const searchParams = new URLSearchParams({\n    api_key: KEY,\n    query: query,\n    page: page,\n  });\n  const response = await axios.get(`${BASE_URL}${SEARCH}?${searchParams}`);\n  return response.data;\n}\n\nexport async function getOneMovie(id) {\n  const searchParams = new URLSearchParams({\n    api_key: KEY,\n  });\n  const response = await axios.get(`${BASE_URL}/movie/${id}?${searchParams}`);\n  return response.data;\n}\n\nexport async function getCast(id) {\n  const searchParams = new URLSearchParams({\n    api_key: KEY,\n  });\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?${searchParams}`\n  );\n  return response.data;\n}\n\nexport async function getReviews(id) {\n  const searchParams = new URLSearchParams({\n    api_key: KEY,\n  });\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?${searchParams}`\n  );\n  return response.data;\n}\nexport async function getTrailer(id) {\n  const searchParams = new URLSearchParams({\n    api_key: KEY,\n  });\n  const response = await axios.get(\n    `${BASE_URL}/movie/${id}/videos?${searchParams}`\n  );\n  return response.data;\n}\n"],"names":["CastMemberStyled","styled","ActorPhoto","props","src","DEFAULT_VALUES","ActorName","ActorPosition","CastMember","member","profile_path","alt","name","character","CastList","useState","STATUS","status","setStatus","movieId","useParams","cast","setCast","useEffect","getCast","data","Loader","length","map","id","Message","text","Error","StyledError","StyledMessage","IDLE","PENDING","RESOLVED","REJECTED","POSTER","AVATAR","IMG_PATH","DESCRIPTION","KEY","BASE_URL","TRENDING","SEARCH","getTrends","page","searchParams","URLSearchParams","api_key","axios","response","getMovies","query","getOneMovie","getReviews","getTrailer"],"sourceRoot":""}