{"version":3,"file":"static/js/684.7fa14e7e.chunk.js","mappings":"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","sources":["components/ButtonLoadMore/buttonLoadMore.styled.js","components/ButtonLoadMore/ButtonLoadMore.jsx","components/MovieItem/movieItem.styled.js","components/MovieItem/MovieItem.jsx","components/MovieList/movieList.styled.js","components/MovieList/MovieList.jsx","components/Form/form.styled.js","components/Form/Form.jsx","pages/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LoadMore = styled.button`\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 25px;\n  background-color: #6643b5;\n  border: none;\n  border-radius: 4px;\n  color: rgba(255, 255, 255, 0.908);\n  cursor: pointer;\n  font-size: 16px;\n  padding: 10px 20px;\n  transition: background-color 300ms cubic-bezier(0.175, 0.885, 0.32, 1.275) 0s;\n\n  &:hover,\n  &:focus {\n    background-color: #8594e4;\n  }\n`;\n","import { LoadMore } from \"./buttonLoadMore.styled\"\nimport PropTypes from 'prop-types';\n\nexport const Button = ({ loadMore }) => {\n  return (\n    <LoadMore onClick={loadMore}>Load more</LoadMore>\n  )\n}\n\n\nButton.propTypes = {\n  loadMore: PropTypes.func.isRequired\n} ","import styled from 'styled-components';\n\nexport const MovieItemStyled = styled.li`\n  overflow: hidden;\n  border-radius: 4px;\n  background-color: rgba(220, 214, 247, 0.3);\n  backdrop-filter: blur(10px);\n  box-shadow: 5px 5px 5px 0px rgba(0, 0, 0, 0.5);\n  width: calc((100% - 5 * 20px) / 5);\n  position: relative;\n  transition: all 0.2s ease-in-out;\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n\nexport const ImageStyled = styled.img`\n  width: 100%;\n  display: block;\n`;\n\nexport const MovieTitle = styled.h2`\n  font-size: 18px;\n  text-align: center;\n  padding: 10px;\n  color: white;\n  text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000,\n    1px 1px 0 #000;\n`;\n\nexport const Chip = styled.p`\n  background-color: ${bcgColor};\n  backdrop-filter: blur(10px);\n  display: inline-block;\n  padding: 8px;\n  font-size: 17px;\n  border-radius: 40%;\n  position: absolute;\n  top: 15px;\n  right: 15px;\n`;\n\nfunction bcgColor(props) {\n  if (props.type < 0) {\n    return null;\n  } else if (props.type > 0 && props.type < 5) {\n    return 'rgba(159, 30, 73, 0.5)';\n  } else if (props.type > 5 && props.type < 8) {\n    return 'rgba(204,204,0, 0.5)';\n  } else {\n    return 'rgba(34, 139, 34, 0.5)';\n  }\n}\n","import { Link } from \"react-router-dom\"\nimport { Chip, ImageStyled, MovieItemStyled, MovieTitle } from \"./movieItem.styled\"\nimport PropTypes from 'prop-types';\n\nexport const MovieItem = ({info, path}) => {\n  return (\n    <MovieItemStyled>\n      <Link to={`/movies/${info.id}`} state={path}>\n        <ImageStyled src={`https://image.tmdb.org/t/p/original${info.poster_path}`} alt={info.title} />\n        <MovieTitle>{info.title}</MovieTitle>\n        <Chip type={info.vote_count ? info.vote_average : -1}>{info.vote_count ? info.vote_average.toFixed(1) : ''}</Chip>\n      </Link>\n    </MovieItemStyled>\n    \n  )\n}\n\nMovieItem.propTypes = {\n  info: PropTypes.object.isRequired,\n  path: PropTypes.object\n} ","import styled from 'styled-components';\n\nexport const MovieListStyled = styled.ul`\n  display: flex;\n  gap: 20px;\n  flex-wrap: wrap;\n  padding: 0;\n`;\n","import { MovieItem } from \"components/MovieItem/MovieItem\"\nimport { useLocation } from \"react-router-dom\"\nimport { MovieListStyled } from \"./movieList.styled\"\nimport PropTypes from 'prop-types';\n\nexport const MovieList = ({ data }) => {\n  const location = useLocation()\n\n  return (\n    <>\n      <MovieListStyled>\n        {data.map(movie => <MovieItem path={{from: location}} key={movie.id} info={movie} />)}\n      </MovieListStyled>\n    </>\n  )\n  \n}\n\nMovieList.propTypes = {\n  data: PropTypes.array.isRequired,\n} ","import styled from 'styled-components';\n\nexport const StyledForm = styled.form`\n  margin: 20px 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nexport const SybmitButton = styled.button`\n  background-color: #6643b5;\n  color: rgba(255, 255, 255, 0.908);\n  border: none;\n  border-radius: 4px;\n  font-size: 16px;\n  padding: 10px 15px;\n  margin-left: 10px;\n  cursor: pointer;\n  transition: background-color 300ms cubic-bezier(0.175, 0.885, 0.32, 1.275) 0s;\n\n  &:hover,\n  &:focus {\n    background-color: #8594e4;\n  }\n`;\n\nexport const StyledInput = styled.input`\n  padding: 10px;\n  border: 2px solid #ccc;\n  border-radius: 4px;\n  font-size: 16px;\n  transition: border-color 300ms cubic-bezier(0.175, 0.885, 0.32, 1.275) 0s;\n\n  &:focus {\n    outline: none;\n    border-color: #430f58;\n  }\n`;\n","import { StyledForm, StyledInput, SybmitButton } from \"./form.styled\"\nimport PropTypes from 'prop-types';\n\nexport const Form = ({submit, value}) => {\n  return <StyledForm onSubmit={submit}>\n    <StyledInput\n      name=\"search\"\n      type=\"text\"\n      autoComplete=\"off\"\n      autoFocus\n      placeholder=\"Search films\"\n      defaultValue={value}\n    />\n    <SybmitButton type=\"submit\" >\n      Search\n    </SybmitButton>\n  </StyledForm>\n}\n\nForm.propTypes = {\n  submit: PropTypes.func.isRequired,\n  value: PropTypes.string\n} ","import { MovieList } from \"components/MovieList/MovieList\";\nimport { getMovies } from \"helpers/api\";\nimport { useEffect, useState } from \"react\";\nimport { toast } from \"react-hot-toast\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { STATUS } from \"constants/constants\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { Error } from \"components/Error/Error\";\nimport { Message } from \"components/Message/Message\";\nimport { Button } from \"components/ButtonLoadMore/ButtonLoadMore\";\nimport { Form } from \"components/Form/Form\";\n\nconst Movies = () => {\n \n  const [status, setStatus] = useState(STATUS.IDLE);\n  const [movies, setMovies] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalMovies, setTotalMovies] = useState(0);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const filterValue = searchParams.get('filter') ?? '';\n\n  useEffect(() => {\n    if (filterValue) {\n      (async () => {\n        try {\n          if (page === 1) {\n            setStatus(STATUS.PENDING)\n            const data = await getMovies(filterValue);\n            setMovies(data.results);\n            setTotalMovies(data.total_results);\n            setStatus(STATUS.RESOLVED);\n          }\n          if (page > 1) {\n              const data = await getMovies(filterValue, page);\n              setMovies(prevArr => [...prevArr, ...data.results]);\n            }\n        } catch {\n          setStatus(STATUS.REJECTED)\n        }\n      })();\n    } \n  }, [filterValue, page])\n\n  function onSubmit(evt) {\n    evt.preventDefault()\n    const query = evt.target.elements.search.value.trim();\n    if (!query) {\n      setSearchParams({});\n      const notify = () => toast.error('Please, fill the search field.');\n      return notify()\n    }else if (query === filterValue) {\n      const notify = () => toast('Please use another Query ;)', {icon: 'üòµ‚Äçüí´'});;\n      return notify()\n    }\n    setPage(1)\n    const newFilter = { filter: query };\n    setSearchParams(newFilter);\n  }\n  \n  return (\n    <>\n      <Form submit={onSubmit} value={filterValue} />\n      {status === STATUS.PENDING && <Loader />}\n      {status === STATUS.RESOLVED\n        ? (movies.length ? (<><MovieList data={movies} /> {totalMovies > movies.length ? <Button loadMore={() => setPage(prevPage => prevPage + 1)}/>: <></>}</>) : <Message text=\"The true explorers of our time are not discouraged by failure. Try another query.\" />)\n        : <></>}\n      {status === STATUS.REJECTED && <Error/>}\n    </>\n  )\n}\n\nexport default Movies"],"names":["LoadMore","styled","Button","loadMore","onClick","MovieItemStyled","ImageStyled","MovieTitle","Chip","props","type","MovieItem","info","path","to","id","state","src","poster_path","alt","title","vote_count","vote_average","toFixed","MovieListStyled","MovieList","data","location","useLocation","map","movie","from","StyledForm","SybmitButton","StyledInput","Form","submit","value","onSubmit","name","autoComplete","autoFocus","placeholder","defaultValue","useState","STATUS","status","setStatus","movies","setMovies","page","setPage","totalMovies","setTotalMovies","useSearchParams","searchParams","setSearchParams","filterValue","get","useEffect","getMovies","results","total_results","prevArr","evt","preventDefault","query","target","elements","search","trim","toast","icon","filter","Loader","length","prevPage","Message","text","Error"],"sourceRoot":""}